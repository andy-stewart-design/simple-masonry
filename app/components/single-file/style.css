.masonry-grid-root {
  display: grid;
  grid-template-columns: minmax(0, 1fr);
  row-gap: var(--spacing-300, 24px);
  isolation: isolate;
  color: var(--__masonry-grid-color-foreground);

  & [data-skeleton="true"] {
    background: var(--__masonry-grid-color-skeleton-pulse-start);
    border-radius: var(--masonry-image-border-radius);
    width: max-content;
    animation: var(--masonry-skeleton-animation);

    & > * {
      opacity: 0;
      visibility: hidden;
    }
  }

  & :where(a, button) {
    &:focus:not(:focus-visible) {
      outline: none;
    }

    &:focus-visible {
      outline-offset: var(--spacing-50, 0.25rem);
      outline-width: var(--spacing-25, 0.125rem);
      outline-color: var(
        --masonry-button-color-foreground,
        var(--__masonry-grid-color-accent)
      );
    }

    &:is(button):focus-visible {
      outline-style: solid;
    }
  }
}

.masonry-grid-header {
  display: flex;
  align-items: baseline;
  justify-content: space-between;
  gap: var(--spacing-100, 8px);
  font-family: var(--font-sans);

  :where(.masonry-grid-title) {
    flex: 1 0 auto;
    margin: 0;
    line-height: 100%;
    font-size: var(--font-size-20, 20px);

    @media (min-width: 512px) {
      font-size: var(--font-size-24, 24px);
    }
  }

  :where(.masonry-grid-btn-text) {
    color: var(--color-neutral-900);
  }
}

.masonry-grid-filter-bar {
  display: flex;
  margin-block-end: var(--spacing-100, 8px);
  font-family: var(--font-sans);
  gap: var(--spacing-100, 8px);
}

.masonry-grid {
  box-sizing: border-box;
  display: grid;
  grid-template-columns: repeat(
    auto-fill,
    minmax(
      calc(100% / var(--masonry-cols) - var(--__masonry-grid-col-gap)),
      1fr
    )
  );
  column-gap: var(--__masonry-grid-col-gap);

  :is(*, *::before, *::after) {
    box-sizing: border-box;
  }
}

.masonry-grid-item {
  animation: masonry-grid-slide-in 500ms cubic-bezier(0.22, 1, 0.36, 1) forwards
    calc(50ms * var(--group-item-index, 0));
  opacity: 0;
  translate: 0 2rem;
  height: max-content;

  & > div {
    padding-block-end: var(--__masonry-grid-row-gap);

    &:has(* > :focus-visible) > div {
      outline-offset: var(--spacing-100, 0.5rem);
      outline-width: var(--spacing-25, 0.125rem);
      outline-style: solid;
      outline-color: var(--__masonry-grid-color-item-focus-outline);
    }

    & > div {
      border-radius: 0.0001px;
    }
  }

  .masonry-grid[data-animate-first-group="false"] &[data-group-index="0"] {
    animation: none;
    opacity: 1;
    translate: 0;
  }

  .masonry-grid[data-animate-first-group="reduce"] &[data-group-index="0"] {
    animation-name: masonry-grid-fade-in;
    translate: 0;
  }

  .masonry-grid[data-reduce-motion="true"] & {
    animation-name: masonry-grid-fade-in;
    translate: 0;
  }
}

.masonry-grid-footer {
  display: flex;
  justify-content: center;
  padding: 0 var(--grid-padding) var(--grid-padding);
  margin-top: var(--spacing-300);
  font-family: var(--font-sans);

  :where(button, button.btn) {
    flex-grow: 1;
    display: grid;
    align-items: center;
    justify-items: center;
    background: transparent;
    border: var(--masonry-button-border, 1px solid currentColor);
    font-family: inherit;
    font-size: var(--masonry-button-font-size, var(--font-size-medium, 1rem));
    border-radius: 100vmax;
    min-height: 48px;
    max-width: var(--masonry-button-max-width, 240px);
    padding: 0 20px;
    color: var(
      --masonry-button-color-foreground,
      var(--__masonry-grid-color-accent)
    );
    cursor: pointer;
    transition: transform var(--motion-duration-short-3, 167ms)
        var(--motion-easing-quick-enter, cubic-bezier(0, 0, 0, 1)),
      background var(--motion-duration-short-3, 167ms)
        var(--motion-easing-quick-enter, cubic-bezier(0, 0, 0, 1));

    & > :is(span, svg) {
      grid-area: -1/1;
    }

    &:disabled {
      span {
        opacity: 0;
        visibility: hidden;
      }

      svg {
        animation: masonry-grid-progress-spin 1.5s linear infinite;
        animation-timing-function: cubic-bezier(0.7, 0.2, 0.3, 0.73);
      }
    }

    &:not(:disabled) {
      svg {
        opacity: 0;
        visibility: hidden;
      }
    }

    &:hover {
      background: var(--state-layer-hover, rgb(255 255 255 / 0.04));
    }

    &:active {
      transform: scale(0.97);
      background: var(--state-layer-pressed, rgb(255 255 255 / 0.08));
    }

    &:focus:not(:focus-visible) {
      outline: none;
    }

    &:focus-visible {
      outline-offset: var(--spacing-25, 0.125rem);
      outline-color: var(
        --masonry-button-color-foreground,
        var(--__masonry-grid-color-accent)
      );
      outline-style: solid;
      outline-width: var(--spacing-25, 0.125rem);
    }
  }
}

.masonry-grid-progress-spinner {
  path {
    stroke: var(--__masonry-grid-color-accent);
  }
  path:last-of-type {
    stroke: var(--__masonry-grid-color-foreground);
  }
}

.masonry-grid-image-wrapper {
  border-radius: var(--masonry-image-border-radius);
  overflow: hidden;
  background: var(--__masonry-grid-color-skeleton-pulse-start);
  margin-block-end: 0.25rem;

  img {
    width: 100%;
    height: auto;
    object-fit: cover;
    vertical-align: bottom;
    transition: opacity 500ms cubic-bezier(0.22, 1, 0.36, 1);
  }

  &[data-loaded="false"] img {
    opacity: 0;
  }
}

.masonry-grid-skeleton-image-wrapper {
  animation: var(--masonry-skeleton-animation);

  img {
    opacity: 0;
    visibility: hidden;
  }
}

@keyframes masonry-grid-fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes masonry-grid-slide-in {
  from {
    opacity: 0;
    translate: 0 2rem;
  }
  to {
    opacity: 1;
    translate: 0;
  }
}

@keyframes masonry-grid-progress-spin {
  0% {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(2turn);
  }
}

@keyframes masonry-grid-bg-pulse {
  from {
    background: var(--__masonry-grid-color-skeleton-pulse-start);
  }
  to {
    background: var(--__masonry-grid-color-skeleton-pulse-end);
  }
}
